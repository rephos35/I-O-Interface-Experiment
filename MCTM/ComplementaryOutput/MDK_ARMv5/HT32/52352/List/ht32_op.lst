


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       **********************                              */
    2 00000000         ;/* ht32f_op.s: HT32 Series Flash Option Bytes Block    
                                                                           */
    3 00000000         ;/******************************************************
                       **********************                              */
    4 00000000         ;/* <<< Use Configuration Wizard in Context Menu >>>    
                                                                           */
    5 00000000         ;/******************************************************
                       **********************                              */
    6 00000000         ;  Supported Device
    7 00000000         ;  ========================================
    8 00000000         ;   HT32F52220, HT32F52230
    9 00000000         ;   HT32F52231, HT32F52241
   10 00000000         ;   HT32F52331, HT32F52341
   11 00000000         ;   HT32F52342, HT32F52352
   12 00000000         ;   HT32F52243, HT32F52253
   13 00000000         ;   HT32F0008
   14 00000000         
   15 00000000         ;// <o>  HT32 Device
   16 00000000         ;//      <0=> By Project Asm Define
   17 00000000         ;//      <1=> HT32F52220/30
   18 00000000         ;//      <2=> HT32F52231/41
   19 00000000         ;//      <3=> HT32F52331/41
   20 00000000         ;//      <4=> HT32F52342/52
   21 00000000         ;//      <5=> HT32F52243/53
   22 00000000         ;//      <6=> HT32F0008
   23 00000000         ;//      <7=> HT32F50220/30
   24 00000000         ;//      <8=> HT32F50231/41
   25 00000000 00000000 
                       USE_HT32_CHIP_SET
                               EQU              0
   26 00000000         
   27 00000000 00000001 
                       HT32F52220_30
                               EQU              1
   28 00000000 00000002 
                       HT32F52231_41
                               EQU              2
   29 00000000 00000003 
                       HT32F52331_41
                               EQU              3
   30 00000000 00000004 
                       HT32F52342_52
                               EQU              4
   31 00000000 00000005 
                       HT32F52243_53
                               EQU              5
   32 00000000 00000006 
                       HT32F0008
                               EQU              6
   33 00000000 00000007 
                       HT32F50220_30
                               EQU              7
   34 00000000 00000008 
                       HT32F50231_41
                               EQU              8
   35 00000000         
   36 00000000                 IF               USE_HT32_CHIP_SET=0



ARM Macro Assembler    Page 2 


   37 00000000                 ELSE
   39                          ENDIF
   40 00000000         ;// <e> Program setting into Option Byte
   41 00000000         ;// <i> Setting of Page erase/program protection and sec
                       urity protection of Flash (configured in Option Byte)
   42 00000000 00000000 
                       FLASH_OPT
                               EQU              0
   43 00000000         ;// </e>
   44 00000000         
   45 00000000         ;// <h> ------------------------------------------------
                       ------------------------------------------------------
   46 00000000         ;// </h>
   47 00000000         ;// <h> -- Main Flash page erase/program protection (OB_
                       PP0 bits)
   48 00000000         ;// <i> Enable page erase/program protection to prevent 
                       unwanted change of Flash contents.
   49 00000000         ;// <i> One bit for n pages. Check FMC chapter of User M
                       anual for detailed.
   50 00000000         ;//   <o0.0 >  Enable page erase/Program Protection 0  -
                        OB_PP[0]
   51 00000000         ;//   <o0.1 >  Enable page erase/Program Protection 1  -
                        OB_PP[1]
   52 00000000         ;//   <o0.2 >  Enable page erase/Program Protection 2  -
                        OB_PP[2]
   53 00000000         ;//   <o0.3 >  Enable page erase/Program Protection 3  -
                        OB_PP[3]
   54 00000000         ;//   <o0.4 >  Enable page erase/Program Protection 4  -
                        OB_PP[4]
   55 00000000         ;//   <o0.5 >  Enable page erase/Program Protection 5  -
                        OB_PP[5]
   56 00000000         ;//   <o0.6 >  Enable page erase/Program Protection 6  -
                        OB_PP[6]
   57 00000000         ;//   <o0.7 >  Enable page erase/Program Protection 7  -
                        OB_PP[7]
   58 00000000         ;//   <o0.8 >  Enable page erase/Program Protection 8  -
                        OB_PP[8]
   59 00000000         ;//   <o0.9 >  Enable page erase/Program Protection 9  -
                        OB_PP[9]
   60 00000000         ;//   <o0.10 > Enable page erase/Program Protection 10 -
                        OB_PP[10]
   61 00000000         ;//   <o0.11 > Enable page erase/Program Protection 11 -
                        OB_PP[11]
   62 00000000         ;//   <o0.12 > Enable page erase/Program Protection 12 -
                        OB_PP[12]
   63 00000000         ;//   <o0.13 > Enable page erase/Program Protection 13 -
                        OB_PP[13]
   64 00000000         ;//   <o0.14 > Enable page erase/Program Protection 14 -
                        OB_PP[14]
   65 00000000         ;//   <o0.15 > Enable page erase/Program Protection 15 -
                        OB_PP[15]
   66 00000000         ;//   <o0.16 > Enable page erase/Program Protection 16 -
                        OB_PP[16]
   67 00000000         ;//   <o0.17 > Enable page erase/Program Protection 17 -
                        OB_PP[17]
   68 00000000         ;//   <o0.18 > Enable page erase/Program Protection 18 -
                        OB_PP[18]
   69 00000000         ;//   <o0.19 > Enable page erase/Program Protection 19 -
                        OB_PP[19]



ARM Macro Assembler    Page 3 


   70 00000000         ;//   <o0.20 > Enable page erase/Program Protection 20 -
                        OB_PP[20]
   71 00000000         ;//   <o0.21 > Enable page erase/Program Protection 21 -
                        OB_PP[21]
   72 00000000         ;//   <o0.22 > Enable page erase/Program Protection 22 -
                        OB_PP[22]
   73 00000000         ;//   <o0.23 > Enable page erase/Program Protection 23 -
                        OB_PP[23]
   74 00000000         ;//   <o0.24 > Enable page erase/Program Protection 24 -
                        OB_PP[24]
   75 00000000         ;//   <o0.25 > Enable page erase/Program Protection 25 -
                        OB_PP[25]
   76 00000000         ;//   <o0.26 > Enable page erase/Program Protection 26 -
                        OB_PP[26]
   77 00000000         ;//   <o0.27 > Enable page erase/Program Protection 27 -
                        OB_PP[27]
   78 00000000         ;//   <o0.28 > Enable page erase/Program Protection 28 -
                        OB_PP[28]
   79 00000000         ;//   <o0.29 > Enable page erase/Program Protection 29 -
                        OB_PP[29]
   80 00000000         ;//   <o0.30 > Enable page erase/Program Protection 30 -
                        OB_PP[30]
   81 00000000         ;//   <o0.31 > Enable page erase/Program Protection 31 -
                        OB_PP[31]
   82 00000000         ;// </h>
   83 00000000         ;// <h> -- Main Flash page erase/program protection (OB_
                       PP1 bits)
   84 00000000         ;// <i> Enable page erase/program protection to prevent 
                       unwanted change of Flash contents.
   85 00000000         ;// <i> One bit for n pages. Check FMC chapter of User M
                       anual for detailed.
   86 00000000         ;//   <o1.0 >  Enable page erase/Program Protection 32 -
                        OB_PP[32]
   87 00000000         ;//   <o1.1 >  Enable page erase/Program Protection 33 -
                        OB_PP[33]
   88 00000000         ;//   <o1.2 >  Enable page erase/Program Protection 34 -
                        OB_PP[34]
   89 00000000         ;//   <o1.3 >  Enable page erase/Program Protection 35 -
                        OB_PP[35]
   90 00000000         ;//   <o1.4 >  Enable page erase/Program Protection 36 -
                        OB_PP[36]
   91 00000000         ;//   <o1.5 >  Enable page erase/Program Protection 37 -
                        OB_PP[37]
   92 00000000         ;//   <o1.6 >  Enable page erase/Program Protection 38 -
                        OB_PP[38]
   93 00000000         ;//   <o1.7 >  Enable page erase/Program Protection 39 -
                        OB_PP[39]
   94 00000000         ;//   <o1.8 >  Enable page erase/Program Protection 40 -
                        OB_PP[40]
   95 00000000         ;//   <o1.9 >  Enable page erase/Program Protection 41 -
                        OB_PP[41]
   96 00000000         ;//   <o1.10 > Enable page erase/Program Protection 42 -
                        OB_PP[42]
   97 00000000         ;//   <o1.11 > Enable page erase/Program Protection 43 -
                        OB_PP[43]
   98 00000000         ;//   <o1.12 > Enable page erase/Program Protection 44 -
                        OB_PP[44]
   99 00000000         ;//   <o1.13 > Enable page erase/Program Protection 45 -
                        OB_PP[45]



ARM Macro Assembler    Page 4 


  100 00000000         ;//   <o1.14 > Enable page erase/Program Protection 46 -
                        OB_PP[46]
  101 00000000         ;//   <o1.15 > Enable page erase/Program Protection 47 -
                        OB_PP[47]
  102 00000000         ;//   <o1.16 > Enable page erase/Program Protection 48 -
                        OB_PP[48]
  103 00000000         ;//   <o1.17 > Enable page erase/Program Protection 49 -
                        OB_PP[49]
  104 00000000         ;//   <o1.18 > Enable page erase/Program Protection 50 -
                        OB_PP[50]
  105 00000000         ;//   <o1.19 > Enable page erase/Program Protection 51 -
                        OB_PP[51]
  106 00000000         ;//   <o1.20 > Enable page erase/Program Protection 52 -
                        OB_PP[52]
  107 00000000         ;//   <o1.21 > Enable page erase/Program Protection 53 -
                        OB_PP[53]
  108 00000000         ;//   <o1.22 > Enable page erase/Program Protection 54 -
                        OB_PP[54]
  109 00000000         ;//   <o1.23 > Enable page erase/Program Protection 55 -
                        OB_PP[55]
  110 00000000         ;//   <o1.24 > Enable page erase/Program Protection 56 -
                        OB_PP[56]
  111 00000000         ;//   <o1.25 > Enable page erase/Program Protection 57 -
                        OB_PP[57]
  112 00000000         ;//   <o1.26 > Enable page erase/Program Protection 58 -
                        OB_PP[58]
  113 00000000         ;//   <o1.27 > Enable page erase/Program Protection 59 -
                        OB_PP[59]
  114 00000000         ;//   <o1.28 > Enable page erase/Program Protection 60 -
                        OB_PP[60]
  115 00000000         ;//   <o1.29 > Enable page erase/Program Protection 61 -
                        OB_PP[61]
  116 00000000         ;//   <o1.30 > Enable page erase/Program Protection 62 -
                        OB_PP[62]
  117 00000000         ;//   <o1.31 > Enable page erase/Program Protection 63 -
                        OB_PP[63]
  118 00000000         ;// </h>
  119 00000000         ;// <h> -- Main Flash page erase/program protection (OB_
                       PP2 bits)
  120 00000000         ;// <i> Enable page erase/program protection to prevent 
                       unwanted change of Flash contents.
  121 00000000         ;// <i> One bit for n pages. Check FMC chapter of User M
                       anual for detailed.
  122 00000000         ;//   <o2.0 >  Enable page erase/Program Protection 64 -
                        OB_PP[64]
  123 00000000         ;//   <o2.1 >  Enable page erase/Program Protection 65 -
                        OB_PP[65]
  124 00000000         ;//   <o2.2 >  Enable page erase/Program Protection 66 -
                        OB_PP[66]
  125 00000000         ;//   <o2.3 >  Enable page erase/Program Protection 67 -
                        OB_PP[67]
  126 00000000         ;//   <o2.4 >  Enable page erase/Program Protection 68 -
                        OB_PP[68]
  127 00000000         ;//   <o2.5 >  Enable page erase/Program Protection 69 -
                        OB_PP[69]
  128 00000000         ;//   <o2.6 >  Enable page erase/Program Protection 70 -
                        OB_PP[70]
  129 00000000         ;//   <o2.7 >  Enable page erase/Program Protection 71 -
                        OB_PP[71]



ARM Macro Assembler    Page 5 


  130 00000000         ;//   <o2.8 >  Enable page erase/Program Protection 72 -
                        OB_PP[72]
  131 00000000         ;//   <o2.9 >  Enable page erase/Program Protection 73 -
                        OB_PP[73]
  132 00000000         ;//   <o2.10 > Enable page erase/Program Protection 74 -
                        OB_PP[74]
  133 00000000         ;//   <o2.11 > Enable page erase/Program Protection 75 -
                        OB_PP[75]
  134 00000000         ;//   <o2.12 > Enable page erase/Program Protection 76 -
                        OB_PP[76]
  135 00000000         ;//   <o2.13 > Enable page erase/Program Protection 77 -
                        OB_PP[77]
  136 00000000         ;//   <o2.14 > Enable page erase/Program Protection 78 -
                        OB_PP[78]
  137 00000000         ;//   <o2.15 > Enable page erase/Program Protection 79 -
                        OB_PP[79]
  138 00000000         ;//   <o2.16 > Enable page erase/Program Protection 80 -
                        OB_PP[80]
  139 00000000         ;//   <o2.17 > Enable page erase/Program Protection 81 -
                        OB_PP[81]
  140 00000000         ;//   <o2.18 > Enable page erase/Program Protection 82 -
                        OB_PP[82]
  141 00000000         ;//   <o2.19 > Enable page erase/Program Protection 83 -
                        OB_PP[83]
  142 00000000         ;//   <o2.20 > Enable page erase/Program Protection 84 -
                        OB_PP[84]
  143 00000000         ;//   <o2.21 > Enable page erase/Program Protection 85 -
                        OB_PP[85]
  144 00000000         ;//   <o2.22 > Enable page erase/Program Protection 86 -
                        OB_PP[86]
  145 00000000         ;//   <o2.23 > Enable page erase/Program Protection 87 -
                        OB_PP[87]
  146 00000000         ;//   <o2.24 > Enable page erase/Program Protection 88 -
                        OB_PP[88]
  147 00000000         ;//   <o2.25 > Enable page erase/Program Protection 89 -
                        OB_PP[89]
  148 00000000         ;//   <o2.26 > Enable page erase/Program Protection 90 -
                        OB_PP[90]
  149 00000000         ;//   <o2.27 > Enable page erase/Program Protection 91 -
                        OB_PP[91]
  150 00000000         ;//   <o2.28 > Enable page erase/Program Protection 92 -
                        OB_PP[92]
  151 00000000         ;//   <o2.29 > Enable page erase/Program Protection 93 -
                        OB_PP[93]
  152 00000000         ;//   <o2.30 > Enable page erase/Program Protection 94 -
                        OB_PP[94]
  153 00000000         ;//   <o2.31 > Enable page erase/Program Protection 95 -
                        OB_PP[95]
  154 00000000         ;// </h>
  155 00000000         ;// <h> -- Main Flash page erase/program protection (OB_
                       PP3 bits)
  156 00000000         ;// <i> Enable page erase/program protection to prevent 
                       unwanted change of Flash contents.
  157 00000000         ;// <i> One bit for n pages. Check FMC chapter of User M
                       anual for detailed.
  158 00000000         ;//   <o3.0 >  Enable page erase/Program Protection 96  
                       - OB_PP[96]
  159 00000000         ;//   <o3.1 >  Enable page erase/Program Protection 97  
                       - OB_PP[97]



ARM Macro Assembler    Page 6 


  160 00000000         ;//   <o3.2 >  Enable page erase/Program Protection 98  
                       - OB_PP[98]
  161 00000000         ;//   <o3.3 >  Enable page erase/Program Protection 99  
                       - OB_PP[99]
  162 00000000         ;//   <o3.4 >  Enable page erase/Program Protection 100 
                       - OB_PP[100]
  163 00000000         ;//   <o3.5 >  Enable page erase/Program Protection 101 
                       - OB_PP[101]
  164 00000000         ;//   <o3.6 >  Enable page erase/Program Protection 102 
                       - OB_PP[102]
  165 00000000         ;//   <o3.7 >  Enable page erase/Program Protection 103 
                       - OB_PP[103]
  166 00000000         ;//   <o3.8 >  Enable page erase/Program Protection 104 
                       - OB_PP[104]
  167 00000000         ;//   <o3.9 >  Enable page erase/Program Protection 105 
                       - OB_PP[105]
  168 00000000         ;//   <o3.10 > Enable page erase/Program Protection 106 
                       - OB_PP[106]
  169 00000000         ;//   <o3.11 > Enable page erase/Program Protection 107 
                       - OB_PP[107]
  170 00000000         ;//   <o3.12 > Enable page erase/Program Protection 108 
                       - OB_PP[108]
  171 00000000         ;//   <o3.13 > Enable page erase/Program Protection 109 
                       - OB_PP[109]
  172 00000000         ;//   <o3.14 > Enable page erase/Program Protection 110 
                       - OB_PP[110]
  173 00000000         ;//   <o3.15 > Enable page erase/Program Protection 111 
                       - OB_PP[111]
  174 00000000         ;//   <o3.16 > Enable page erase/Program Protection 112 
                       - OB_PP[112]
  175 00000000         ;//   <o3.17 > Enable page erase/Program Protection 113 
                       - OB_PP[113]
  176 00000000         ;//   <o3.18 > Enable page erase/Program Protection 114 
                       - OB_PP[114]
  177 00000000         ;//   <o3.19 > Enable page erase/Program Protection 115 
                       - OB_PP[115]
  178 00000000         ;//   <o3.20 > Enable page erase/Program Protection 116 
                       - OB_PP[116]
  179 00000000         ;//   <o3.21 > Enable page erase/Program Protection 117 
                       - OB_PP[117]
  180 00000000         ;//   <o3.22 > Enable page erase/Program Protection 118 
                       - OB_PP[118]
  181 00000000         ;//   <o3.23 > Enable page erase/Program Protection 119 
                       - OB_PP[119]
  182 00000000         ;//   <o3.24 > Enable page erase/Program Protection 120 
                       - OB_PP[120]
  183 00000000         ;//   <o3.25 > Enable page erase/Program Protection 121 
                       - OB_PP[121]
  184 00000000         ;//   <o3.26 > Enable page erase/Program Protection 122 
                       - OB_PP[122]
  185 00000000         ;//   <o3.27 > Enable page erase/Program Protection 123 
                       - OB_PP[123]
  186 00000000         ;//   <o3.28 > Enable page erase/Program Protection 124 
                       - OB_PP[124]
  187 00000000         ;//   <o3.29 > Enable page erase/Program Protection 125 
                       - OB_PP[125]
  188 00000000         ;//   <o3.30 > Enable page erase/Program Protection 126 
                       - OB_PP[126]
  189 00000000         ;//   <o3.31 > Enable page erase/Program Protection 127 



ARM Macro Assembler    Page 7 


                       - OB_PP[127]
  190 00000000         ;// </h>
  191 00000000         
  192 00000000         ;// <o4.0> -- Enable security protection of Flash (OB_CP
                       [0])
  193 00000000         ;//   <i> Enable security protection to prevent illegal 
                       Flash code/data access
  194 00000000         ;// <o4.1> -- Enable Option Byte erase/program protectio
                       n (OB_CP[1])
  195 00000000         ;//   <i> Enable Option Byte erase/program protection to
                        prevent unwanted change of Option Byte
  196 00000000         ;// <o0> -- Option Byte value: OB_PP0 (0x1FF00000)
  197 00000000         ;// <o1> -- Option Byte value: OB_PP1 (0x1FF00004)
  198 00000000         ;// <o2> -- Option Byte value: OB_PP2 (0x1FF00008)
  199 00000000         ;// <o3> -- Option Byte value: OB_PP3 (0x1FF0000C)
  200 00000000         ;// <o4> -- Option Byte value: OB_CP  (0x1FF00010)
  201 00000000         ;// <h> -- !!! Note: One OB_PP bit for setting n Pages. 
                       Check FMC chapter of User Manual for detailed.
  202 00000000         ;// </h>
  203 00000000         ;// <h> ------------------------------------------------
                       ------------------------------------------------------
  204 00000000         ;// </h>
  205 00000000         
  206 00000000 00000000 
                       PP0     EQU              0x00000000
  207 00000000 00000000 
                       PP1     EQU              0x00000000
  208 00000000 00000000 
                       PP2     EQU              0x00000000
  209 00000000 00000000 
                       PP3     EQU              0x00000000
  210 00000000 00000000 
                       CP      EQU              0x00000000
  211 00000000         
  212 00000000 FFFFFFFF 
                       nPP0    EQU              PP0:EOR:0xFFFFFFFF
  213 00000000 FFFFFFFF 
                       nPP1    EQU              PP1:EOR:0xFFFFFFFF
  214 00000000 FFFFFFFF 
                       nPP2    EQU              PP2:EOR:0xFFFFFFFF
  215 00000000 FFFFFFFF 
                       nPP3    EQU              PP3:EOR:0xFFFFFFFF
  216 00000000 FFFFFFFF 
                       nCP     EQU              CP:EOR:0xFFFFFFFF
  217 00000000         
  218 00000000                 IF               nPP0 = 0xFFFFFFFF && nPP1 = 0xF
FFFFFFF && nPP2 = 0xFFFFFFFF && nPP3 = 0xFFFFFFFF &&  nCP = 0xFFFFFFFF
  219 00000000 FFFFFFFF 
                       CK      EQU              0xFFFFFFFF
  220 00000000                 ELSE
  222                          ENDIF
  223 00000000 FFFFFFFF 
                       RES     EQU              0xFFFFFFFF
  224 00000000         
  225 00000000         
  226 00000000                 IF               FLASH_OPT <> 0
  239                          ENDIF
  240 00000000         
  241 00000000         ;// <e> Program Bootloader Options



ARM Macro Assembler    Page 8 


  242 00000000         ;BOOT_OPT      EQU     0
  243 00000000         ;//   <o> Bootloader Waiting time (mS) <1500-14200:50>
  244 00000000         ;//    <i> Bootloader Waiting time in mSecond
  245 00000000         ;BOOTOPTV EQU        1500
  246 00000000         
  247 00000000         ;    IF BOOT_OPT <> 0
  248 00000000         ;BOOTOPT EQU         0xFFFFFF00:OR:(BOOTOPTV - 1500)/50
  249 00000000         ;    ELSE
  250 00000000         ;BOOTOPT EQU         0xFFFFFFFF
  251 00000000         ;    ENDIF
  252 00000000         ;
  253 00000000         ;                IF      BOOT_OPT <> 0
  254 00000000         ;                AREA    |.ARM.__AT_0x1FF0002C|, CODE, R
                       EADONLY
  255 00000000         ;                DCD   BOOTOPT       ; 0x1FF0002C
  256 00000000         ;                ENDIF
  257 00000000         
  258 00000000         ;// </e>
  259 00000000         
  260 00000000         ;// <e> WDT Option.
  261 00000000         ;// <i> WDT had been open automatically after MCU Power 
                       On, and WDT Reload Value = 8s.
  262 00000000         ;// <i> *Note : Not Support HT32 full Series. 
  263 00000000         ;// <i> *       HT32F1755_65 does not support the functi
                       on.
  264 00000000         ;// <i> *       HT32F1653_54 does not support the functi
                       on.
  265 00000000         ;// <i> *       HT32F1655_56 does not support the functi
                       on.
  266 00000000         ;// <i> *       HT32F12345 does not support the function
                       .
  267 00000000         ;// <i> *       HT32F12365_66 does not support the funct
                       ion.
  268 00000000         ;// <i> *       HT32F52220_30 does not support the funct
                       ion.
  269 00000000         ;// <i> *       HT32F52231_41 does not support the funct
                       ion.
  270 00000000         ;// <i> *       HT32F52331_41 does not support the funct
                       ion.
  271 00000000         ;// <i> *       HT32F52342_52 does not support the funct
                       ion.
  272 00000000         ;// <i> *       HT32F52243_53 does not support the funct
                       ion.
  273 00000000 00000000 
                       WDT_OPT EQU              0
  274 00000000 FFFF7A92 
                       WDT_MAGIC_KEY
                               EQU              0xFFFF7A92
  275 00000000         
  276 00000000                 IF               WDT_OPT <> 0
  291                          ENDIF
  292 00000000         ;// </e>
  293 00000000         
  294 00000000         ;// <e> Program Checksum
  295 00000000 00000000 
                       CHECKSUM_OPT
                               EQU              0
  296 00000000         ;//   <o0> Writer Checksum: Code
  297 00000000         ;//   <o1> Writer Checksum: Data



ARM Macro Assembler    Page 9 


  298 00000000         ;//   <o2> Writer Checksum: Code+Option
  299 00000000 FFFFFFFF 
                       CK_CODE EQU              0xFFFFFFFF
  300 00000000 FFFFFFFF 
                       CK_DATA EQU              0xFFFFFFFF
  301 00000000 FFFFFFFF 
                       CK_CODEOP
                               EQU              0xFFFFFFFF
  302 00000000         
  303 00000000                 IF               CHECKSUM_OPT <> 0
  308                          ENDIF
  309 00000000         
  310 00000000         ;// </e>
  311 00000000         
  312 00000000         ;// <e> Program user's Flash data into Option Byte
  313 00000000         ;// <i> Address range: from 0x1FF00050 to 0x1FF003EF/0x1
                       FF002FF (Max 928/432 Bytes)
  314 00000000 00000000 
                       FLASH_DATA
                               EQU              0
  315 00000000         ;// </e>
  316 00000000                 IF               FLASH_DATA <> 0
  319                          ENDIF
  320 00000000         
  321 00000000                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0+ --apcs=inter
work --depend=.\ht32\52352\obj\ht32_op.d -o.\ht32\52352\obj\ht32_op.o -I.\RTE\_
HT32 -IC:\Users\Mary\AppData\Local\Arm\Packs\Holtek\HT32_DFP\1.0.20\ARM\INC\Hol
tek\HT32F5xxxx -ID:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --pre
define="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 527" --predefine
="USE_HT32F52342_52 SETA 1" --predefine="USE_HT32_CHIP SETA 4" --list=.\ht32\52
352\list\ht32_op.lst ht32_op.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

CHECKSUM_OPT 00000000

Symbol: CHECKSUM_OPT
   Definitions
      At line 295 in file ht32_op.s
   Uses
      At line 303 in file ht32_op.s
Comment: CHECKSUM_OPT used once
CK FFFFFFFF

Symbol: CK
   Definitions
      At line 219 in file ht32_op.s
   Uses
      None
Comment: CK unused
CK_CODE FFFFFFFF

Symbol: CK_CODE
   Definitions
      At line 299 in file ht32_op.s
   Uses
      None
Comment: CK_CODE unused
CK_CODEOP FFFFFFFF

Symbol: CK_CODEOP
   Definitions
      At line 301 in file ht32_op.s
   Uses
      None
Comment: CK_CODEOP unused
CK_DATA FFFFFFFF

Symbol: CK_DATA
   Definitions
      At line 300 in file ht32_op.s
   Uses
      None
Comment: CK_DATA unused
CP 00000000

Symbol: CP
   Definitions
      At line 210 in file ht32_op.s
   Uses
      At line 216 in file ht32_op.s
Comment: CP used once
FLASH_DATA 00000000

Symbol: FLASH_DATA
   Definitions
      At line 314 in file ht32_op.s
   Uses
      At line 316 in file ht32_op.s
Comment: FLASH_DATA used once
FLASH_OPT 00000000

Symbol: FLASH_OPT



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 42 in file ht32_op.s
   Uses
      At line 226 in file ht32_op.s
Comment: FLASH_OPT used once
HT32F0008 00000006

Symbol: HT32F0008
   Definitions
      At line 32 in file ht32_op.s
   Uses
      None
Comment: HT32F0008 unused
HT32F50220_30 00000007

Symbol: HT32F50220_30
   Definitions
      At line 33 in file ht32_op.s
   Uses
      At line 284 in file ht32_op.s
Comment: HT32F50220_30 used once
HT32F50231_41 00000008

Symbol: HT32F50231_41
   Definitions
      At line 34 in file ht32_op.s
   Uses
      At line 284 in file ht32_op.s
Comment: HT32F50231_41 used once
HT32F52220_30 00000001

Symbol: HT32F52220_30
   Definitions
      At line 27 in file ht32_op.s
   Uses
      None
Comment: HT32F52220_30 unused
HT32F52231_41 00000002

Symbol: HT32F52231_41
   Definitions
      At line 28 in file ht32_op.s
   Uses
      None
Comment: HT32F52231_41 unused
HT32F52243_53 00000005

Symbol: HT32F52243_53
   Definitions
      At line 31 in file ht32_op.s
   Uses
      None
Comment: HT32F52243_53 unused
HT32F52331_41 00000003

Symbol: HT32F52331_41
   Definitions
      At line 29 in file ht32_op.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      None
Comment: HT32F52331_41 unused
HT32F52342_52 00000004

Symbol: HT32F52342_52
   Definitions
      At line 30 in file ht32_op.s
   Uses
      None
Comment: HT32F52342_52 unused
PP0 00000000

Symbol: PP0
   Definitions
      At line 206 in file ht32_op.s
   Uses
      At line 212 in file ht32_op.s
Comment: PP0 used once
PP1 00000000

Symbol: PP1
   Definitions
      At line 207 in file ht32_op.s
   Uses
      At line 213 in file ht32_op.s
Comment: PP1 used once
PP2 00000000

Symbol: PP2
   Definitions
      At line 208 in file ht32_op.s
   Uses
      At line 214 in file ht32_op.s
Comment: PP2 used once
PP3 00000000

Symbol: PP3
   Definitions
      At line 209 in file ht32_op.s
   Uses
      At line 215 in file ht32_op.s
Comment: PP3 used once
RES FFFFFFFF

Symbol: RES
   Definitions
      At line 223 in file ht32_op.s
   Uses
      None
Comment: RES unused
USE_HT32_CHIP_SET 00000000

Symbol: USE_HT32_CHIP_SET
   Definitions
      At line 25 in file ht32_op.s
   Uses
      At line 36 in file ht32_op.s
Comment: USE_HT32_CHIP_SET used once
WDT_MAGIC_KEY FFFF7A92



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols


Symbol: WDT_MAGIC_KEY
   Definitions
      At line 274 in file ht32_op.s
   Uses
      None
Comment: WDT_MAGIC_KEY unused
WDT_OPT 00000000

Symbol: WDT_OPT
   Definitions
      At line 273 in file ht32_op.s
   Uses
      At line 276 in file ht32_op.s
Comment: WDT_OPT used once
nCP FFFFFFFF

Symbol: nCP
   Definitions
      At line 216 in file ht32_op.s
   Uses
      At line 218 in file ht32_op.s
Comment: nCP used once
nPP0 FFFFFFFF

Symbol: nPP0
   Definitions
      At line 212 in file ht32_op.s
   Uses
      At line 218 in file ht32_op.s
Comment: nPP0 used once
nPP1 FFFFFFFF

Symbol: nPP1
   Definitions
      At line 213 in file ht32_op.s
   Uses
      At line 218 in file ht32_op.s
Comment: nPP1 used once
nPP2 FFFFFFFF

Symbol: nPP2
   Definitions
      At line 214 in file ht32_op.s
   Uses
      At line 218 in file ht32_op.s
Comment: nPP2 used once
nPP3 FFFFFFFF

Symbol: nPP3
   Definitions
      At line 215 in file ht32_op.s
   Uses
      At line 218 in file ht32_op.s
Comment: nPP3 used once
29 symbols
364 symbols in table
